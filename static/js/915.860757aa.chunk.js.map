{"version":3,"file":"static/js/915.860757aa.chunk.js","mappings":"oMAGaA,EAAQ,SAAC,GAOf,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,KAEA,OACE,iBAAKC,UAAU,kBAAf,WACE,gBAAKA,UAAU,cAAf,UACE,SAAC,IAAD,CACEC,GAAIL,EACJG,KAAMA,EACNH,KAAMA,EACNM,IAAI,IACJC,IAAI,KACJN,SAAUA,EACVF,YAAaA,EACbG,MAAOA,EACPJ,SAAUA,OAGd,gBAAKM,UAAU,gBAAf,UACE,gBAAKA,UAAU,yBAItB,C,yGC9BYI,EAAcC,EAAAA,GAAAA,IAAH,6FAKXC,EAAcD,EAAAA,GAAAA,MAAH,8hB,+JCJXE,EAAgBF,EAAAA,GAAAA,IAAH,8FAKbG,EAAeH,EAAAA,GAAAA,OAAH,kkBA4BZI,EAAcJ,EAAAA,GAAAA,IAAH,iEAIXK,EAAaL,EAAAA,GAAAA,OAAH,4E,2KCxBVM,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOhB,EAAP,KAAaiB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,UAAS,IAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KACA,GAA4BL,EAAAA,EAAAA,WAAS,GAArC,eAAOM,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAQXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAU7B,EAAoB,EAApBA,KAAME,EAAc,EAAdA,MACtC,OAAQF,GACN,IAAK,OACHiB,EAAQf,GACR,MACF,IAAK,QACHiB,EAASjB,GACT,MACF,IAAK,WACHmB,EAAYnB,GAKjB,EAYK4B,EAAQ,WACZb,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,SAAC,IAAD,WACE,kBAAMU,SAnBmB,SAAAC,GAC3BA,EAAEC,iBACFT,GACEU,EAAAA,EAAAA,IAAa,CACXlC,KAAAA,EACAkB,MAAAA,EACAE,SAAAA,KAGJU,GACD,EASG,WACE,8BACE,iCACA,SAACjC,EAAAsC,EAAD,CACErC,SAAU8B,EACV7B,YAAY,OACZI,KAAK,OACLH,KAAK,OACLC,UAAQ,EACRC,MAAOF,QAGX,8BACE,kCAEA,SAACH,EAAAsC,EAAD,CACEhC,KAAK,QACLH,KAAK,QACLD,YAAY,oBACZE,UAAQ,EACRH,SAAU8B,EACV1B,MAAOgB,QAGX,SAAC,KAAD,WACE,mBAAOkB,QAAQ,MAAf,WACE,qCACA,SAACvC,EAAAsC,EAAD,CACEhC,KAAMmB,EAAS,OAAS,WACxBxB,SAAU8B,EACV5B,KAAK,WACLE,MAAOkB,EACPrB,YAAY,sBACZE,UAAQ,KAEV,SAAC,KAAD,CACEE,KAAK,SACLkC,QAAS,kBAAMd,GAAU,SAAAe,GAAS,OAAKA,CAAL,GAAzB,EAFX,SAIIhB,GAAqB,SAAC,MAAD,KAAZ,SAAC,MAAD,YAKjB,SAAC,KAAD,WACE,SAAC,KAAD,CACEiB,GAAI,YACJpC,KAAK,SACLqC,MAAO,CAAEC,KAAMf,GAHjB,2BAeT,EC1HKgB,EAAW,WACf,OACE,0BACE,SAAC3B,EAAD,KAGL,C","sources":["components/Input/Input.jsx","components/Input/Input.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { InputStyled } from './Input.styled';\n\nexport const Input = ({\n  onChange,\n  placeholder,\n  name,\n  required,\n  value,\n  type,\n}) => {\n  return (\n    <div className=\"input-container\">\n      <div className=\"input-group\">\n        <InputStyled\n          id={name}\n          type={type}\n          name={name}\n          min=\"3\"\n          max=\"15\"\n          required={required}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"pass-strength\">\n        <div className=\"strength-percent\"></div>\n      </div>\n    </div>\n  );\n};\n\nInput.propTypes = {\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  required: PropTypes.bool,\n  value: PropTypes.node,\n};\n","import styled from 'styled-components';\nexport const WrapperForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const InputStyled = styled.input`\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n\n  color: #fff;\n  border-color: #444c5c;\n  background-color: #c29545;\n  font-size: 20px;\n  font-weight: 700;\n  width: 270px;\n  height: 40px;\n  padding: 20px 20px;\n  border-radius: 40px;\n  border-color: none;\n  &:focus,\n  &:hover {\n    border-color: #c29545;\n    background-color: #444c5c;\n    transform: translateY(+0.25em);\n    box-shadow: 0 0 10px 4px rgba(0, 0, 0, 0.6);\n    transition: 0.3s linear;\n    transform: scale(1.15);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const WrapperButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const ButtonDelate = styled.button`\n  display: flex;\n  text-align: center;\n  font: inherit;\n  line-height: 1;\n  max-width: 150px;\n\n  justify-content: center;\n  margin: 0.5em;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 1em 2em;\n  background: none;\n  border: 2px solid;\n  border-radius: 8px;\n  border-color: #183666;\n  color: #ff9000;\n  transition: 0.25s;\n  text-decoration: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n    box-shadow: 0 0.5em 0.5em -0.4em, #ffa260;\n    transform: translateY(-0.25em);\n    border-color: #ffa260;\n    color: #44ff82;\n  }\n`;\nexport const BoxPassword = styled.div`\n  display: flex;\n  position: relative;\n`;\nexport const BtnIconEya = styled.button`\n  position: absolute;\n  top: 45px;\n  left: 240px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/authOperations';\nimport { Input } from 'components/Input/Input';\nimport { WrapperForm } from 'components/Input/Input.styled';\nimport {\n  ButtonDelate,\n  WrapperButton,\n  BoxPassword,\n  BtnIconEya,\n} from './RegisterForm.styled';\nimport { FaEye } from 'react-icons/fa';\nimport { FaEyeSlash } from 'react-icons/fa';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isShow, setIsShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  // Контрольований інпут\n  // const handleNameChange = event => setName(event.target.value);\n  // const handleEmailChange = event => setEmail(event.target.value);\n  // const handlePasswordChange = event => setPassword(event.target.value);\n\n  // const handleClick = () => setShow(!show);\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleRegisterSubmit = e => {\n    e.preventDefault();\n    dispatch(\n      registerUser({\n        name,\n        email,\n        password,\n      })\n    );\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <WrapperForm>\n      <form onSubmit={handleRegisterSubmit}>\n        <label>\n          <b>Name</b>\n          <Input\n            onChange={handleChange}\n            placeholder=\"Jack\"\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n          />\n        </label>\n        <label>\n          <b>Email</b>\n\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"arhnold@gmail.com\"\n            required\n            onChange={handleChange}\n            value={email}\n          />\n        </label>\n        <BoxPassword>\n          <label htmlFor=\"pin\">\n            <b>Password</b>\n            <Input\n              type={isShow ? 'text' : 'password'}\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n              placeholder=\"Enter your password\"\n              required\n            />\n            <BtnIconEya\n              type=\"button\"\n              onClick={() => setIsShow(prevState => !prevState)}\n            >\n              {!isShow ? <FaEye /> : <FaEyeSlash />}\n            </BtnIconEya>\n          </label>\n        </BoxPassword>\n\n        <WrapperButton>\n          <ButtonDelate\n            to={'/contacts'}\n            type=\"submit\"\n            state={{ from: location }}\n          >\n            Sign Up\n          </ButtonDelate>\n\n          {/* <LinkHeader to={'/login'} state={{ from: location }}>\n            Log in\n          </LinkHeader> */}\n        </WrapperButton>\n      </form>\n    </WrapperForm>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\nexport { Register as default };\n"],"names":["Input","onChange","placeholder","name","required","value","type","className","id","min","max","WrapperForm","styled","InputStyled","WrapperButton","ButtonDelate","BoxPassword","BtnIconEya","RegisterForm","useState","setName","email","setEmail","password","setPassword","isShow","setIsShow","dispatch","useDispatch","location","useLocation","handleChange","target","reset","onSubmit","e","preventDefault","registerUser","I","htmlFor","onClick","prevState","to","state","from","Register"],"sourceRoot":""}