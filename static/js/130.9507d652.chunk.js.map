{"version":3,"file":"static/js/130.9507d652.chunk.js","mappings":"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","sources":["redux/contacts/contactSelectors.js","components/ListContacts/ListContacts.styled.js","components/CardContact/CardContact.styled.js","components/CardContact/CardContact.jsx","components/ListContacts/ListContacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/App/App.styled.js","components/ButtonBack/ButtonBack.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\nexport const getContacts = state => state.contacts.items;\n// export const getSelectIsLoading = state => state.contacts.isLoading;\nexport const getSelectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from 'styled-components';\nexport const BoxList = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const ItemContactStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n`;\nexport const Text = styled.p`\n  margin-bottom: 8px;\n  font-weight: 700;\n`;\n\nexport const ButtonCard = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 20px;\n  width: 40px;\n  height: 40px;\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  border-radius: 50%;\n  background-color: #ae000d;\n  color: white;\n  border-radius: 40px;\n  border-color: none;\n  transition: cubic-bezier(0.17, 0.67, 0.83, 0.67);\n\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #191616;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FiTrash2 } from 'react-icons/fi';\nimport React from 'react';\nimport { ButtonCard, Text, ItemContactStyled } from './CardContact.styled';\n\nexport const CardContact = ({ id, name, number, handlDeleteContacts }) => {\n  return (\n    <ItemContactStyled>\n      <Text>\n        {name}: {number}\n      </Text>\n\n      <ButtonCard\n        type=\"button\"\n        onClick={() => {\n          handlDeleteContacts(id);\n        }}\n      >\n        <FiTrash2 />\n      </ButtonCard>\n    </ItemContactStyled>\n  );\n};\n\nCardContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handlDeleteContacts: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, getContacts } from 'redux/contacts/contactSelectors';\nimport { fetchDeleteContacts } from 'redux/contacts/contactsOperations';\nimport { BoxList } from './ListContacts.styled';\nimport { nanoid } from 'nanoid';\nimport { CardContact } from '../CardContact/CardContact';\nimport React from 'react';\n\nexport const ListContacts = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  const handlDeleteContacts = contactId => {\n    dispatch(fetchDeleteContacts(contactId));\n  };\n\n  return (\n    <BoxList>\n      <ul>\n        {contacts\n          .filter(contact =>\n            contact.name.toLowerCase().includes(filterValue.toLowerCase())\n          )\n          .map(({ name, number, id }) => {\n            return (\n              <CardContact\n                key={nanoid()}\n                id={id}\n                name={name}\n                number={number}\n                handlDeleteContacts={handlDeleteContacts}\n              ></CardContact>\n            );\n          })}\n      </ul>\n    </BoxList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelFilter = styled.label`\n  display: block;\n  text-align: center;\n`;\n\nexport const InputFilter = styled.input`\n  font-size: 20px;\n  font-weight: 700;\n  width: 220px;\n  height: 40px;\n  padding: 10px 20px;\n  border-radius: 40px;\n  border-color: none;\n  justify-content: center;\n  :hover,\n  :focus {\n    border-color: #ff6200;\n  }\n`;\nexport const TextFilter = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.3;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { chengeFilter } from 'redux/contacts/contactsSlice';\nimport { InputFilter, TextFilter, LabelFilter } from './Filter.styled';\n\nexport const Filter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    setFilter(e.target.value);\n    dispatch(chengeFilter(e.target.value));\n  };\n\n  return (\n    <LabelFilter id={nanoid()}>\n      <TextFilter>Find contacts by name</TextFilter>\n      <InputFilter type=\"text\" value={filter} onChange={onChangeFilter} />\n    </LabelFilter>\n  );\n};\n","import styled from 'styled-components';\nexport const SectionForm = styled.section`\n  margin: 20px;\n`;\nexport const LabelForm = styled.label`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  text-align: center;\n  margin-bottom: 30px;\n`;\nexport const Input = styled.input`\n  font-size: 20px;\n  font-weight: 700;\n  width: 220px;\n  height: 40px;\n  padding: 10px 20px;\n  border-radius: 40px;\n  border-color: none;\n\n  :hover,\n  :focus {\n    border-color: #ff6200;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nexport const TextForm = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1.3;\n`;\nexport const ButtonForm = styled.button`\n  margin-left: 20px;\n  width: 220px;\n  height: 60px;\n  font-size: 18px;\n  align-items: center;\n  font-weight: 700;\n  margin: 0 auto;\n  background-color: #123c23;\n  color: white;\n  border-radius: 40px;\n  border-color: none;\n  transition: cubic-bezier(0.17, 0.67, 0.83, 0.67);\n\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #ff6200;\n  }\n`;\n","import { fetchAddNewContact } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport {\n  SectionForm,\n  Form,\n  LabelForm,\n  Input,\n  TextForm,\n  ButtonForm,\n} from './ContactForm.styled';\n\nimport { useState } from 'react';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase()\n      )\n    ) {\n      setName('');\n      setNumber('');\n      return alert(`${data.name} is already in contacts`);\n    }\n    dispatch(fetchAddNewContact(data));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <SectionForm>\n      <Form onSubmit={handleSubmit}>\n        <LabelForm>\n          <TextForm>Name</TextForm>\n          <Input\n            id={nanoid()}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Nick\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </LabelForm>\n        <LabelForm>\n          <TextForm>Number</TextForm>\n          <Input\n            id={nanoid()}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"+38(063)01-001-01\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </LabelForm>\n\n        <ButtonForm type=\"submit\">Add contact</ButtonForm>\n      </Form>\n    </SectionForm>\n  );\n};\n","import styled from 'styled-components';\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  margin: auto;\n  padding: 18px;\n\n  background-color: #cddc92;\n\n  background-repeat: no-repeat;\n  object-fit: contain;\n  opacity: 0.7;\n`;\n","import { LinkHeader } from 'components/Header/Header.styled';\nimport { useLocation } from 'react-router-dom';\nexport const ButtonBack = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      <LinkHeader to={'/'} state={{ from: location }}>\n        <p>Go back</p>\n      </LinkHeader>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleContactsStyled = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport const BoxFilterContacts = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const SubtitleContactsStyled = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n`;\n","import { ListContacts } from '../../components/ListContacts/ListContacts';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Wrapper } from '../../components/App/App.styled';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport { ButtonBack } from 'components/ButtonBack/ButtonBack';\nimport { useEffect } from 'react';\n\nimport {\n  TitleContactsStyled,\n  BoxFilterContacts,\n  SubtitleContactsStyled,\n} from './Contacts.styled';\nexport const Contacts = () => {\n  const { error, status } = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Wrapper>\n      <div>\n        <TitleContactsStyled>Phonebook </TitleContactsStyled>\n        {status === 'loading' ? <ProgressBar /> : ''}\n        {error ? <h2>An error occured: {error}</h2> : <ContactForm />}\n      </div>\n\n      <section>\n        <BoxFilterContacts>\n          <Filter />\n          <ButtonBack />\n          <SubtitleContactsStyled>Contacts</SubtitleContactsStyled>\n          <ListContacts />\n        </BoxFilterContacts>\n      </section>\n    </Wrapper>\n  );\n};\n"],"names":["getFilter","state","contacts","filter","getContacts","items","createSelector","name","toLowerCase","includes","BoxList","styled","ItemContactStyled","Text","ButtonCard","CardContact","id","number","handlDeleteContacts","type","onClick","ListContacts","dispatch","useDispatch","filterValue","useSelector","contactId","fetchDeleteContacts","contact","map","nanoid","LabelFilter","InputFilter","TextFilter","Filter","useState","setFilter","value","onChange","e","target","chengeFilter","SectionForm","LabelForm","Input","Form","TextForm","ButtonForm","ContactForm","setName","setNumber","handleChange","reset","onSubmit","preventDefault","data","find","alert","fetchAddNewContact","placeholder","pattern","title","required","Wrapper","ButtonBack","location","useLocation","to","from","TitleContactsStyled","BoxFilterContacts","SubtitleContactsStyled","Contacts","error","status","useEffect","fetchContacts"],"sourceRoot":""}